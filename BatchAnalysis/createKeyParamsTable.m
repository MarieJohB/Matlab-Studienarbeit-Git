function createKeyParamsTable(tab, paramValues, riseTime, settlingTime, overshoot, peakTime)
% Create HTML table with threshold information

% Define thresholds for good performance
maxRiseTime = 1.5;  % seconds
maxSettlingTime = 5.0;  % seconds
maxOvershoot = 20.0;  % percent

% Count how many parameter values meet the criteria
validCount = sum(~isnan(riseTime));
if validCount == 0
    % No valid data points
    return;
end

goodRiseCount = sum(riseTime <= maxRiseTime & ~isnan(riseTime));
goodSettlingCount = sum(settlingTime <= maxSettlingTime & ~isnan(settlingTime));
goodOvershootCount = sum(overshoot <= maxOvershoot & ~isnan(overshoot));

% Calculate percentages
goodRisePercent = goodRiseCount / validCount * 100;
goodSettlingPercent = goodSettlingCount / validCount * 100;
goodOvershootPercent = goodOvershootCount / validCount * 100;

% Find best parameter values
[~, bestRiseIdx] = min(riseTime);
[~, bestSettlingIdx] = min(settlingTime);
[~, bestOvershootIdx] = min(overshoot);

% Create HTML content
htmlContent = ['<html><head><style>', ...
    'table { border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; }', ...
    'th { background-color: #4472C4; color: white; padding: 8px; text-align: center; font-size: 14px; }', ...
    'td { border: 1px solid #DDDDDD; padding: 8px; font-size: 13px; }', ...
    'tr:nth-child(even) { background-color: #F2F2F2; }', ...
    'tr:hover { background-color: #E8F4F8; }', ...
    '.good { color: green; font-weight: bold; }', ...
    '.bad { color: red; font-weight: bold; }', ...
    '</style></head><body>', ...
    '<table>', ...
    '<tr><th>Parameter</th><th>Threshold</th><th>% Meeting Threshold</th><th>Best Value</th><th>At Parameter</th></tr>'];

% Add rise time row
if goodRisePercent > 50
    riseClass = 'good';
else
    riseClass = 'bad';
end
htmlContent = [htmlContent, ...
    '<tr>', ...
    '<td>Rise Time</td>', ...
    sprintf('<td>≤ %.2f s</td>', maxRiseTime), ...
    sprintf('<td class="%s">%.1f%%</td>', riseClass, goodRisePercent), ...
    sprintf('<td>%.4f s</td>', riseTime(bestRiseIdx)), ...
    sprintf('<td>%.4f</td>', paramValues(bestRiseIdx)), ...
    '</tr>'];

% Add settling time row
if goodSettlingPercent > 50
    settlingClass = 'good';
else
    settlingClass = 'bad';
end
htmlContent = [htmlContent, ...
    '<tr>', ...
    '<td>Settling Time</td>', ...
    sprintf('<td>≤ %.2f s</td>', maxSettlingTime), ...
    sprintf('<td class="%s">%.1f%%</td>', settlingClass, goodSettlingPercent), ...
    sprintf('<td>%.4f s</td>', settlingTime(bestSettlingIdx)), ...
    sprintf('<td>%.4f</td>', paramValues(bestSettlingIdx)), ...
    '</tr>'];

% Add overshoot row
if goodOvershootPercent > 50
    overshootClass = 'good';
else
    overshootClass = 'bad';
end
htmlContent = [htmlContent, ...
    '<tr>', ...
    '<td>Overshoot</td>', ...
    sprintf('<td>≤ %.2f%%</td>', maxOvershoot), ...
    sprintf('<td class="%s">%.1f%%</td>', overshootClass, goodOvershootPercent), ...
    sprintf('<td>%.4f%%</td>', overshoot(bestOvershootIdx)), ...
    sprintf('<td>%.4f</td>', paramValues(bestOvershootIdx)), ...
    '</tr>'];

htmlContent = [htmlContent, '</table></body></html>'];

% Create HTML component
uihtml(tab, 'HTMLSource', htmlContent, 'Position', [200 10 600 30]);
end